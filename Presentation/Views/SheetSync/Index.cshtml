@{
    Layout = "_Layout";
    var cfg = (Dictionary<string, string>)Model;
    string Value(string k) => cfg.TryGetValue(k, out var v) ? v : "";
}

<h3 class="mt-4 mb-3">External Google-Sheet Links</h3>

<table class="table table-bordered" id="sheetTable">
    <thead class="table-light">
        <tr>
            <th>Table</th>
            <th style="width:60%">URL</th>
            <th class="text-nowrap">Action</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var key in new[] { "interview", "ap", "onboarding", "todo" })
        {
            <tr data-key="@key">
                <td class="text-capitalize">@key</td>

                <td>
                    <input class="form-control" disabled value="@Value(key)" />
                </td>

                <td class="text-nowrap">
                    <!-- ⬇ NEW sync button -->
                    <button class="btn btn-sm btn-outline-primary sync"
                            title="Sync only this table">
                        <i class="bi bi-cloud-arrow-down"></i>
                    </button>

                    <button class="btn btn-sm btn-outline-secondary edit" title="Edit">
                        <i class="bi bi-pencil"></i>
                    </button>

                    <button class="btn btn-sm btn-outline-success save d-none" title="Save">
                        <i class="bi bi-check-lg"></i>
                    </button>

                    <button class="btn btn-sm btn-outline-danger  cancel d-none" title="Cancel">
                        <i class="bi bi-x-lg"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<button class="btn btn-primary mt-3" id="syncAll">
    <i class="bi bi-cloud-arrow-down"></i> Sync All
</button>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", () => {

            /*------------------------------------------------------------*/
            /*  CONFIG                                                    */
            /*------------------------------------------------------------*/
            const api = "/";          // <-- API root
            const toast = msg => alert(msg);                // quick / replace w. Toast

            /*------------------------------------------------------------*/
            /*  PER-ROW HANDLERS                                          */
            /*------------------------------------------------------------*/
            document.querySelectorAll("#sheetTable tbody tr").forEach(row => {

                const key = row.dataset.key;          // “todo”, “ap”, …
                const input = row.querySelector("input");
                const btnSync = row.querySelector(".sync");
                const btnEdit = row.querySelector(".edit");
                const btnSave = row.querySelector(".save");
                const btnCancel = row.querySelector(".cancel");

                let original = input.value;

                btnSync.onclick = async () => {
                    try {
                        btnSync.disabled = true;
                        const r = await fetch(api + "api/sheets/sync/" + key, {
                            method: "POST", credentials: "include"
                        });
                        toast(await r.text());
                    } catch (e) {
                        toast("Sync failed – check API/network");
                        console.error(e);
                    } finally {
                        btnSync.disabled = false;
                    }
                };


                /*—— edit / save / cancel identical to before ———*/
                btnEdit.onclick = () => {
                    input.disabled = false; input.focus();
                    toggle(true);
                };
                btnCancel.onclick = () => {
                    input.value = original; input.disabled = true;
                    toggle(false);
                };
                btnSave.onclick = async () => {
                    try {
                        await fetch(api + "api/sheets/config", {
                            method: "PUT",
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ [key]: input.value }),
                            credentials: "include"
                        });
                        original = input.value;            // commit
                        input.disabled = true;
                        toggle(false);
                    } catch (e) { toast("Save failed"); console.error(e); }
                };

                function toggle(editing) {
                    btnSync.classList.toggle("d-none", editing); // hide while editing
                    btnEdit.classList.toggle("d-none", editing);
                    btnSave.classList.toggle("d-none", !editing);
                    btnCancel.classList.toggle("d-none", !editing);
                }
            });

            /*------------------------------------------------------------*/
            /*  GLOBAL  “Sync All”                                         */
            /*------------------------------------------------------------*/
            document.getElementById("syncAll").onclick = async () => {
                try {
                    const r = await fetch(api + "api/sheets/sync", {
                        method: "POST", credentials: "include"
                    });
                    toast(await r.text());
                } catch (e) { toast("Sync-all failed"); console.error(e); }
            };
        });
    </script>
}
